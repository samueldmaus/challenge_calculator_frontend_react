{"version":3,"sources":["components/Calculator.js","redux/mapStoreToProps.js","components/EquationsList.js","components/App.js","redux/reducers/equations.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/equations.saga.js","redux/sagas/_root.saga.js","reportWebVitals.js","index.js"],"names":["Calculator","state","value","addValue","event","setState","target","clearInput","deleteInput","slice","length","addToEquationPlusCalculate","props","dispatch","type","payload","equation","Box","style","width","paddingBottom","border","color","size","direction","gap","padding","alignContent","TextInput","this","paddingLeft","Button","label","onClick","LinkPrevious","Component","connect","mapStoreToProps","reduxState","store","useDispatch","useEffect","paddingTop","Card","CardHeader","pad","background","Heading","level","CardBody","equations","map","answer","id","CardFooter","App","saveEquations","action","rootReducer","combineReducers","addEquation","getEquations","equationsSaga","axios","post","put","console","log","get","response","data","takeEvery","rootSaga","all","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71ea3b62.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport {Button, Box, TextInput} from 'grommet'\nimport {LinkPrevious} from 'grommet-icons'\nimport { connect } from 'react-redux'\n\nclass Calculator extends Component{\n    // state to keep track of what's in the input field\n    state = {\n        value: ''\n    }\n\n    // add clicked value to input field\n    addValue = (event) => {\n        // if state is '' then add the value clicked, else add the value to what is already present in this.state.value\n        if(this.state.value === ''){\n            this.setState({\n                value: event.target.value\n            })\n        }else{\n            this.setState({\n                value: this.state.value + event.target.value\n            })\n        }\n    }\n\n    //clear the input field\n    clearInput = () => {\n        this.setState({\n            value: ''\n        })\n    }\n\n    // delete the last value from the input field\n    deleteInput = () => {\n        this.setState({\n            value: this.state.value.slice(0, this.state.value.length-1)\n        })\n    }\n\n    // dispatch the equation to the equations saga and reset input field\n    addToEquationPlusCalculate = () => {\n        this.props.dispatch({type: \"ADD_EQUATION\", payload: {equation: this.state.value}});\n        this.clearInput();\n    }   \n\n    render(){\n        return(\n            <Box style={{width:308, paddingBottom:15}}border={{color: 'brand', size:'medium'}} direction=\"column\" gap=\"xsmall\">\n                <Box style={{padding: 10}} alignContent=\"center\">\n                    <TextInput style={{width: 280 }} size= \"medium\" value={this.state.value}/> \n                </Box>\n                <Box style={{paddingLeft:20}} direction=\"row\" gap=\"medium\">\n                    <Button size=\"small\" label=\"Clear\" onClick={this.clearInput}/>\n                </Box>\n                <Box style={{paddingLeft:20}} direction=\"row\" gap=\"xsmall\">\n                    <Button value=\"7\" label=\"7\" onClick={this.addValue}/>\n                    <Button value=\"8\" label=\"8\" onClick={this.addValue}/>\n                    <Button value=\"9\" label=\"9\" onClick={this.addValue}/>\n                    <Button value=\"รท\" label=\"รท\" onClick={this.addValue}/>\n                </Box>\n                <Box style={{paddingLeft:20}} direction=\"row\" gap=\"xsmall\">\n                    <Button value=\"4\" label=\"4\" onClick={this.addValue}/>\n                    <Button value=\"5\" label=\"5\" onClick={this.addValue}/>\n                    <Button value=\"6\" label=\"6\" onClick={this.addValue}/>\n                    <Button value=\"x\" label=\"x\" onClick={this.addValue}/>\n                </Box>\n                <Box style={{paddingLeft:20}} direction=\"row\" gap=\"xsmall\">\n                    <Button value=\"1\" label=\"1\" onClick={this.addValue}/>\n                    <Button value=\"2\" label=\"2\" onClick={this.addValue}/>\n                    <Button value=\"3\" label=\"3\" onClick={this.addValue}/>\n                    <Button value=\"-\" label=\"-\" onClick={this.addValue}/>\n                </Box>\n                <Box style={{paddingLeft:20, paddingBottom:5}} direction=\"row\" gap=\"xsmall\">\n                    <Button value=\"0\" label=\"0\" onClick={this.addValue}/>\n                    <Button label={<LinkPrevious size='small' color='plain'/>} onClick={this.deleteInput}/>\n                    <Button value=\"=\" label=\"=\" onClick={this.addToEquationPlusCalculate}/>\n                    <Button value=\"+\" label=\"+\" onClick={this.addValue}/>\n                </Box>\n            </Box>\n        )\n    }\n}\n\nexport default connect()(Calculator);","const mapStoreToProps = (reduxState) => {\n    return{\n        // reduxState properties are bound to 'props.store'\n        store: reduxState\n    };\n};\n\nexport default mapStoreToProps;","import React, {useEffect} from 'react'\nimport { connect, useDispatch } from 'react-redux'\nimport mapStoreToProps from '../redux/mapStoreToProps'\nimport {Box, Card, CardHeader, CardBody, CardFooter, Heading} from 'grommet'\n\nfunction EquationsList(props) {\n\n    const dispatch = useDispatch();\n\n    useEffect((props) => {\n        dispatch({type: 'GET_EQUATIONS'})\n    }, [])\n\n    return(\n        <Box style={{paddingTop: 20}}>\n            <Card style={{width:500}}>\n                <CardHeader pad=\"small\" background=\"light-2\"><Heading level=\"3\">Equations</Heading></CardHeader>\n                <CardBody pad=\"small\" background=\"light-1\">\n                    <ol>\n                        {props.store.equations.map(equation => (\n                            <Heading level=\"5\" key={equation.id}><li>{equation.equation} = {equation.answer}</li></Heading>\n                        ))}\n                    </ol>\n                </CardBody>\n                <CardFooter pad=\"small\" background=\"light-2\">\n                    <Heading level=\"6\">By: Sam Maus</Heading>      \n                </CardFooter>\n            </Card>\n        </Box>\n    )\n}\n\nexport default connect(mapStoreToProps)(EquationsList)","import React, {Component} from 'react'\nimport {Heading} from 'grommet'\nimport Calculator from './Calculator'\nimport EquationsList from './EquationsList'\n\nclass App extends Component{\n  render(){\n    return(\n      <>\n        <Heading >Calculator</Heading>\n        <Calculator/>\n        <EquationsList/>\n      </>\n    )\n  }\n}\n\nexport default App;\n","// equations reducer\nconst saveEquations = (state = [], action) => {\n    switch(action.type) {\n        case 'SAVE_EQUATIONS':\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default saveEquations;","import {combineReducers} from 'redux'\nimport equations from './equations.reducer.js'\n\n// root reducer\nconst rootReducer = combineReducers({\n    equations,\n})\n\nexport default rootReducer;","import {takeEvery, put} from 'redux-saga/effects'\nimport axios from 'axios'\n\n// function w/ axios to send new equation to server\nfunction* addEquation(action){\n    try{\n        yield axios.post('http://localhost:5000/api/equations', action.payload);\n        yield put({type: 'GET_EQUATIONS'});\n    }catch{\n        console.log('ERROR IN ADD EQUATIONS SAGA: ');\n    }\n}\n\n// function w/ axios to get past equations\nfunction* getEquations(){\n    try{\n        let response = yield axios.get('http://localhost:5000/api/equations');\n        yield put({type: 'SAVE_EQUATIONS', payload: response.data})\n    }catch{\n        console.log('ERROR IN GET EQUATIONS SAGA: ')\n    }\n}\n\nfunction* equationsSaga(){\n    yield takeEvery('ADD_EQUATION', addEquation);\n    yield takeEvery('GET_EQUATIONS', getEquations);\n}\n\nexport default equationsSaga;","import {all} from 'redux-saga/effects'\nimport equationsSaga from './equations.saga.js'\n\n// root saga\nfunction* rootSaga(){\n    yield all([\n        equationsSaga()\n    ])\n}\n\nexport default rootSaga;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport createSagaMiddleware from 'redux-saga'\nimport logger from 'redux-logger'\nimport App from './components/App';\nimport rootReducer from './redux/reducers/_root.reducer.js'\nimport rootSaga from './redux/sagas/_root.saga.js'\nimport reportWebVitals from './reportWebVitals';\n\n// create sagamiddleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n    [sagaMiddleware, logger] : \n    [sagaMiddleware];\n\n// create the store for props and add middleware\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(...middlewareList)\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}